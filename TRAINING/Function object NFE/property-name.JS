"use strict";

// имя функции нам доступно как свойство «name»:

function sayHi() {
  alert("Hi");
}

console.log(sayHi.name); // sayHi

// Что довольно забавно, логика назначения name весьма умная. Она присваивает корректное имя даже в случае, когда функция создаётся без имени и тут же присваивается, вот так:
let sayHi = function () {
  alert("Hi");
};

alert(sayHi.name); // sayHi (есть имя!)

//   Это работает даже в случае присваивания значения по умолчанию:
function f(sayHi = function () {}) {
  alert(sayHi.name); // sayHi (работает!)
}

f();

//   В спецификации это называется «контекстное имя»: если функция не имеет name, то JavaScript пытается определить его из контекста.

// Также имена имеют и методы объекта:

let user = {
  sayHi() {
    // ...
  },

  sayBye: function () {
    // ...
  },
};

alert(user.sayHi.name); // sayHi
alert(user.sayBye.name); // sayBye

//   В этом нет никакой магии. Бывает, что корректное имя определить невозможно.
// В таких случаях свойство name имеет пустое значение. Например:

// функция объявлена внутри массива
let arr = [function () {}];

alert(arr[0].name); // <пустая строка>
// здесь отсутствует возможность определить имя, поэтому его нет
