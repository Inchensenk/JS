"use strict";

if (true) {
    var test = true; // используем var вместо let
  }
  
  alert(test); // true, переменная существует вне блока if

  /*Для «var» не существует блочной области видимости 
  Область видимости переменных var ограничивается либо функцией, либо, если переменная глобальная, то скриптом. 
  Такие переменные доступны за пределами блока.*/
/******************************************************************************** */
  if (true) {
    let test = true; // используем let
  }
  
  alert(test); // Error: test is not defined
/******************************************************************************** 
 * 
 * Аналогично для циклов: var не может быть блочной или локальной внутри цикла:
*/
  for (var i = 0; i < 10; i++) {
    // ...
  }
  
  alert(i); // 10, переменная i доступна вне цикла, т.к. является глобальной переменной


  /******************************************************************************** 
   * 
   * Если блок кода находится внутри функции, то var становится локальной переменной в этой функции:
  */
  function sayHi() {
    if (true) {
      var phrase = "Привет";
    }
  
    alert(phrase); // срабатывает и выводит "Привет"
  }
  
  sayHi();
  alert(phrase); // Ошибка: phrase не определена (видна в консоли разработчика)

  /******************************************************************************************************* 
   * Как мы видим, var выходит за пределы блоков if, for и подобных.                                     *
   * Это происходит потому, что на заре развития JavaScript блоки кода не имели лексического окружения.  *
   * Поэтому можно сказать, что var – это пережиток прошлого.                                            *
   * *****************************************************************************************************/