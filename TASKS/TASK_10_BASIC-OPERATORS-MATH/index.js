let a = "" + 1 + 0; /*= "10" // (1)*/
let b = "" - 1 + 0; /*= -1 // (2)*/
let c = true + false; /*= 1*/
let d = 6 / "3"; /*= 2*/
let e = "2" * "3"; /*= 6*/
let f = 4 + 5 + "px"; /*= "9px"*/
let g = "$" + 4 + 5; /*= "$45"*/
let j = "4" - 2; /*= 2*/
let i = "4px" - 2; /*= NaN*/
let h = "  -9  " + 5; /*= "  -9  5" // (3)*/
let m = "  -9  " - 5; /*= -14 // (4)*/
let l = null + 1; /*= 1 // (5)*/
let y = undefined + 1; /*= NaN // (6)*/
let x = " \t \n" - 2; /*= -2 // (7)*/

alert(
  a +
    " || " +
    b +
    " || " +
    c +
    " || " +
    d +
    " || " +
    e +
    " || " +
    f +
    " || " +
    g +
    " || " +
    j +
    " || " +
    i +
    " || " +
    h +
    " || " +
    m +
    " || " +
    l +
    " || " +
    y +
    " || " +
    x
);

/*
1. Сложение со строкой "" + 1 преобразует 1 к строке: "" + 1 = "1", и в следующем случае "1" + 0 работает то же самое правило.
2. Вычитание - (как и большинство математических операторов) работает только с числами, пустая строка "" приводится к 0.
3. Сложение со строкой превращает число 5 в строку и добавляет к строке.
4. Вычитание всегда преобразует к числу, значит строка " -9 " становится числом -9 (пробелы по краям обрезаются).
5. null становится 0 после численного преобразования.
6. undefined становится NaN после численного преобразования.
7. Пробельные символы, такие как \t и \n, по краям строки игнорируются при преобразовании в число, так что строка " \t \n", аналогично пустой строке, становится 0 после численного преобразования.
*/
